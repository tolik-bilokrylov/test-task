{"version":3,"sources":["data.js","components/Card/Card.jsx","App.jsx","index.js"],"names":["isPrime","num","i","primeNumber","n","arr","push","map","v","number","display","array","length","j","Math","floor","random","shuffle","uniqueCardsArray","slice","Card","onClick","card","index","isInactive","isFlipped","isDisabled","className","classNames","swap","temp","App","useState","shuffleCards","concat","cards","openCards","setOpencards","matchedCards","setMatchedcards","shouldDisableAllCards","setShouldDisableAllCards","timeout","useRef","evaluate","first","second","prev","current","setTimeout","handleCardClick","clearTimeout","useEffect","checkIsFlipped","includes","checkIsInactive","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0c68a445.chunk.js","sourcesContent":["function isPrime(num) {\n  for ( let i = 2; i < num; i++ ) {\n      if (num % i === 0) {\n          return false;\n      }\n  }\n  return true;\n}\n\nfunction display(n) {\n  let arr = [2];\n  for (let i = 3; i < n; i+=2) {\n      if (isPrime(i)) {\n          arr.push(i);\n      }\n  }\n  \n  return arr.map((v) => ({number: v}));\n}\n\nconst primeNumber = display(100);\n\nfunction shuffle(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n}\n\nshuffle(primeNumber);\nconst uniqueCardsArray = primeNumber.slice(0, 9)\n\nexport default uniqueCardsArray;","import React from \"react\";\nimport  PropTypes from 'prop-types';\nimport \"./Card.css\";\n\nimport classNames from \"classnames\";\n\nconst Card = ({ onClick, card, index, isInactive, isFlipped, isDisabled }) => {\n  const handleClick = () => {\n    !isFlipped && !isDisabled && onClick(index);\n  };\n  \n  return (\n    <div\n      className={classNames(\"card\", {\n        \"is-flipped\": isFlipped,\n        \"is-inactive\": isInactive,\n      })}\n      onClick={handleClick}\n    >\n      <div className=\"card-face card-font-face\">\n        \n      </div>\n      <div className=\"card-face card-back-face\">\n        {card.number}\n      </div>\n    </div>\n  );\n};\n\nCard.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  card: PropTypes.shape({\n    index: PropTypes.number,\n  }).isRequired,\n  isInactive: PropTypes.bool.isRequired,\n  isFlipped: PropTypes.bool.isRequired, \n  isDisabled: PropTypes.bool.isRequired,\n};\n\nexport default Card;","import React, { useEffect, useRef, useState } from \"react\";\nimport uniqueCardsArray from \"./data.js\";\nimport Card from \"./components/Card/Card\";\nimport './App.css';\n\n// FisherYates Modern Shuffle Algorithm\nfunction swap(array, i, j) {\n  const temp = array[i];\n  array[i] = array[j];\n  array[j] = temp;\n}\nfunction shuffleCards(array) {\n  const length = array.length;\n  for (let i = length; i > 0; i--) {\n    const randomIndex = Math.floor(Math.random() * i);\n    const currentIndex = i - 1;\n    swap(array, currentIndex, randomIndex);\n  }\n  return array;\n}\n\nconst App = () => {\n  const [cards, setCards] = useState(() =>\n    shuffleCards(uniqueCardsArray.concat(uniqueCardsArray))\n  );\n  const [openCards, setOpencards] = useState([]);\n  const [matchedCards, setMatchedcards] = useState({});\n  const [shouldDisableAllCards, setShouldDisableAllCards] = useState(false);\n \n  const timeout = useRef(null);\n\n  const disable = () => {\n    setShouldDisableAllCards(true);\n  };\n\n  const enable = () => {\n    setShouldDisableAllCards(false);\n  };\n\n  const evaluate = () => {\n    const [first, second] = openCards;\n    enable();\n    if (cards[first].number === cards[second].number) {\n      setMatchedcards((prev) => ({ ...prev, [cards[first].number]: true }));\n      setOpencards([]);\n      \n      return;\n    }\n    timeout.current = setTimeout(() => {\n      setOpencards([]);\n    }, 500);\n  };\n\n  const handleCardClick = (index) => {\n    if (openCards.length === 1) {\n      setOpencards((prev) => [...prev, index]);\n      disable();\n    } else {\n      clearTimeout(timeout.current);\n      setOpencards([index]);\n    }\n  };\n  useEffect(() => {\n    let timeout = null;\n    if (openCards.length === 2) {\n      timeout = setTimeout(evaluate, 300);\n    }\n    return () => {\n      clearTimeout(timeout);\n    };\n    // eslint-disable-next-line\n  }, [openCards]);\n\n  const checkIsFlipped = (index) => {\n    return openCards.includes(index);\n  };\n  const checkIsInactive = (card) => {\n    return Boolean(matchedCards[card.number]);\n  };\n  \n  return (\n    <div>\n      <div className=\"card-cont\">\n        <div className=\"card-slot\">\n          {cards.map((card, index) => {\n            return (\n              <div key={index} className=\"card-uno\">\n                <Card\n                  key={index}\n                  card={card}\n                  index={index}\n                  isDisabled={shouldDisableAllCards}\n                  isInactive={checkIsInactive(card)}\n                  isFlipped={checkIsFlipped(index)}\n                  onClick={handleCardClick}\n                />\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}